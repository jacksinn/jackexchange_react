{"version":3,"sources":["components/Feedback/Snackbars/SimpleSnackbar.js","utils/LessonParse.js","components/Cards/MainCard.js","components/Lessons/Lesson.js","components/Lessons/LessonGridItem.js","components/Lessons/Lessons.js","components/Hero/HomepageHero.js","components/Challenges/Challenge.js","components/Challenges/Challenges.js","components/Courses/Course.js","components/Courses/CoursesHome.js","pages/Home.js","components/Challenges/ChallengesHome.js","components/Lessons/LessonsHome.js","components/Navigation/Footer.js","components/Playbooks/Playbook.js","components/Playbooks/PlaybookGridItem.js","components/Playbooks/Playbooks.js","components/Navigation/Drawers/ResponsiveDrawer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","props","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","event","reason","react_default","a","createElement","Button","onClick","children","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","key","color","size","IconButton","aria-label","className","Close_default","LessonParseType","lessonType","slice","indexOf","length","card","height","display","flexDirection","cardMedia","paddingTop","backgroundColor","cardContent","flexGrow","headerText","fontSize","MainCard","Card","headerClass","title","CardContent","Typography","gutterBottom","variant","component","name","body","extras","drupalConsole","textAlign","composer","defaultLesson","Lesson","_useState","_useState2","lesson","setLesson","_useState3","_useState4","viewButton","setViewButton","viewText","undefined","Fragment","default_highlight","data","attributes","field_code","sizeEvent","type","typeText","style","CardActions","Axios","get","apiLink","then","LessonGridItem","setSize","Grid","item","xs","sm","md","striptags","Lessons","lessons","setLessons","useEffect","axios","all","spread","composerRes","drupalConsoleRes","result","concat","toConsumableArray","container","map","field_instructions","value","links","self","href","HomepageHero","heroContent","palette","background","paper","heroButtons","marginTop","Container","maxWidth","align","paragraph","justify","Challenge","CardMedia","image","GET_CHALLENGES","gql","_templateObject","Challenges","react_apollo_esm","query","_ref","loading","error","nodes","results","challenge","nid","entityLabel","Course","CoursesHome","course","cardGrid","paddingBottom","footer","Home","Hero_HomepageHero","ChallengesHome","LessonsHome","Footer","Playbook","PlaybookGridItem","console","log","Playbooks","root","drawer","defineProperty","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","link","textDecoration","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","List","ListItem","button","ListItemIcon","Home_default","react_router_dom","to","ListItemText","primary","Divider","LocalLibrary_default","Extension_default","LibraryBooks_default","CssBaseline","AppBar","position","Toolbar","edge","Menu_default","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","keepMounted","xsDown","cache","InMemoryCache","HttpLink","uri","client","ApolloClient","createMuiTheme","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","react_router","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba52b5bb.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nexport default function SimpleSnackbar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>{props.children}</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">{props.message}</span>}\n        action={[\n          <Button\n            key=\"undo\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={handleClose}\n          >\n            UNDO\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  );\n}\n","/* Removes the entity type from the string */\nexport function LessonParseType(lessonType) {\n  // Store the entity type string pattern\n  const entityString = \"lesson_step_entity--\";\n\n  // Set the type by getting the remainder of the string after the entityString\n  const type = lessonType.slice(\n    lessonType.indexOf(entityString) + entityString.length\n  );\n\n  // Away we go\n  return type;\n}\n","import React from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n    backgroundColor: \"purple\"\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  headerText: {\n    fontSize: \"2.2em\"\n  }\n}));\n\nexport default function MainCard(props) {\n  // Get the styles with the function we created above\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <div className={props.headerClass}>\n        <h1 className={classes.headerText}>{props.title}</h1>\n      </div>\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        <Typography>{props.body}</Typography>\n        {props.extras}\n      </CardContent>\n      {props.children}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Axios from \"axios\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport SimpleSnackbar from \"../Feedback/Snackbars/SimpleSnackbar\";\nimport { LessonParseType } from \"../../utils/LessonParse\";\nimport MainCard from \"../Cards/MainCard\";\n\nconst useStyles = makeStyles(theme => ({\n  drupalConsole: {\n    backgroundColor: \"deepskyblue\",\n    textAlign: \"center\"\n  },\n  composer: {\n    backgroundColor: \"lightseagreen\",\n    textAlign: \"center\"\n  },\n  defaultLesson: {\n    backgroundColor: \"purple\",\n    textAlign: \"center\"\n  }\n}));\n\nexport default function Lesson(props) {\n  // Setting up state for the lesson and viewButton\n  const [lesson, setLesson] = useState();\n  const [viewButton, setViewButton] = useState();\n\n  // If view button is true, set the text to \"Finish Reading\" otherwise to \"View\"\n  const viewText = viewButton ? \"Finished Reading\" : \"View\";\n\n  // If there isn't a lesson loaded, return empy component\n  //  otherwise show the additional information\n  const extras =\n    lesson === undefined ? (\n      <></>\n    ) : (\n      <SyntaxHighlighter>{lesson.data.attributes.field_code}</SyntaxHighlighter>\n    );\n\n  // useEffect(() => {}, []);\n\n  // Get the styles with the function we created above\n  const classes = useStyles();\n\n  // Get reference from parent to the function that handles the GridItem size change\n  const sizeEvent = props.sizeEvent;\n\n  const type = LessonParseType(props.type);\n  // const types = [\"drupal_console_lesson_step\", \"drupal_lesson_step\"];\n  let typeText = \"\";\n\n  let style = type => {\n    switch (type) {\n      case \"drupal_console_lesson_step\":\n        typeText = \"Drupal Console\";\n        return classes.drupalConsole;\n      case \"composer_lesson_step\":\n        typeText = \"Composer\";\n        return classes.composer;\n      default:\n        typeText = \"Lesson\";\n        return classes.defaultLesson;\n    }\n  };\n\n  return (\n    <MainCard\n      name={props.name}\n      body={props.body}\n      extras={extras}\n      headerClass={style(type)}\n      title={typeText}\n    >\n      <CardActions>\n        <Button\n          size=\"small\"\n          onClick={() => {\n            if (!viewButton) {\n              Axios.get(\n                props.apiLink +\n                  \"?include=field_screenshot,field_screenshot.field_media_image\"\n              ).then(data => {\n                setLesson(data.data);\n              });\n            } else {\n              setLesson(undefined);\n            }\n            setViewButton(!viewButton);\n            sizeEvent(!viewButton);\n          }}\n        >\n          {viewText}\n        </Button>\n        <SimpleSnackbar size=\"small\" message={<>{props.name} Added</>}>\n          + Add to my lessons\n        </SimpleSnackbar>\n      </CardActions>\n    </MainCard>\n  );\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Lesson from \"./Lesson\";\nimport striptags from \"striptags\";\n\nexport default function LessonGridItem(props) {\n  const [size, setSize] = useState();\n\n  const changeSize = size => {\n    setSize(size);\n    // console.log(\"changesize\");\n  };\n\n  return (\n    <Grid item key={props.id} xs={12} sm={6} md={size ? 12 : 4}>\n      <Lesson\n        id={props.id}\n        key={props.id}\n        name={props.name}\n        body={striptags(props.body)}\n        apiLink={props.apiLink}\n        sizeEvent={changeSize}\n        type={props.type}\n      />\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport striptags from \"striptags\";\nimport LessonGridItem from \"./LessonGridItem\";\n\nexport default function Lessons(props) {\n  // Setting up lessons to use state\n  const [lessons, setLessons] = useState();\n\n  // Grabbing the JSONAPI endpionts for the lessons entity type\n  // \"The Effect Hook lets you perform side effects in function components\"\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/composer_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/drupal_console_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/docker_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/drupal_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/drupal_module_step\"\n        )\n      ])\n      .then(\n        // Once we have all the rsults (via the promises)\n        axios.spread((composerRes, drupalConsoleRes) => {\n          // Populate the result array using the spread operator on the entity types\n          const result = [\n            ...composerRes.data.data,\n            ...drupalConsoleRes.data.data\n          ];\n          // Update state to store the lessons\n          setLessons(result);\n        })\n      );\n  }, []);\n\n  return lessons ? (\n    <Grid container spacing={4}>\n      {// Iterating over the lessons to output\n      lessons.map(lesson => {\n        return (\n          <LessonGridItem\n            id={lesson.id}\n            key={lesson.id}\n            name={lesson.attributes.name}\n            body={striptags(lesson.attributes.field_instructions.value)}\n            apiLink={lesson.links.self.href}\n            type={lesson.type}\n          />\n        );\n      })}\n    </Grid>\n  ) : (\n    // If no results yet just display loading text\n    <div>Loading...</div>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction HomepageHero() {\n  const useStyles = makeStyles(theme => ({\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6)\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4)\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" gutterBottom>\n          jackExchange\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          A place to find information and ask questions. Browse our list of\n          lessons and if you don't find what you're looking for, request a\n          lesson.\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\">View Challenges</Button>\n            </Grid>\n            <Grid item>\n              <Button variant=\"outlined\">Browse Lessons</Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default HomepageHero;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n}));\n\nexport default function Challenge(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image=\"https://source.unsplash.com/random\"\n        title=\"Image title\"\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        <Typography>{props.body}</Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">View</Button>\n        <Button size=\"small\">+ Add to My Challenges</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n// import { graphql } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport striptags from \"striptags\";\nimport Challenge from \"./Challenge\";\n\n// Setup the GraphQL query\nconst GET_CHALLENGES = gql`\n  query challengesQuery {\n    nodes(filter: { type: \"challenge\" }) {\n      results {\n        entityLabel\n        nid\n        ... on NodeChallenge {\n          body {\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function Challenges() {\n  // In the return we wrap the output in a Query component and pass the GraphQL query\n  //  If it's loading, we note that, if there are errors, same, and once we have data\n  //  then we pass along the data to the challenge component\n  // TODO: Setup the Grid component like the Lessons Grid component\n  return (\n    <Query query={GET_CHALLENGES}>\n      {({ loading, error, data }) => {\n        if (loading) return \"Loading...\";\n        if (error) return `Error! ${error.message}`;\n\n        return (\n          <Grid container spacing={4}>\n            {// Iterating over the lessons to output\n            data.nodes.results.map(challenge => {\n              return (\n                <Grid item key={challenge.nid} xs={12} sm={6} md={4}>\n                  <Challenge\n                    name={challenge.entityLabel}\n                    body={striptags(challenge.body.value)}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        );\n      }}\n    </Query>\n  );\n}\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport CardActions from '@material-ui/core/CardActions'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Course(props) {\n\n\n\n  const classes = useStyles();\n\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image=\"https://source.unsplash.com/random\"\n        title=\"Image title\"\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        <Typography>\n          This is a media card. You can use this section to describe the content.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">\n          View\n        </Button>\n        <Button size=\"small\">\n          + Add to my courses\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Course from \"./Course\";\n\nexport default function CoursesHome(props) {\n  let courses = [\n    {\n      id: \"asdfads\",\n      name: \"Course 1\"\n    },\n    {\n      id: \"asdger\",\n      name: \"Course 2\"\n    },\n    {\n      id: \"olkfdgs\",\n      name: \"Course 3\"\n    },\n    {\n      id: \"dfsikgj\",\n      name: \"Course 4\"\n    }\n  ];\n\n  return (\n    <Grid container spacing={4}>\n      {// Iterating over the lessons to output\n      courses.map(course => {\n        return (\n          <Grid item key={course.id} xs={12} sm={6} md={4}>\n            <Course name={course.name} />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Lessons from \"../components/Lessons/Lessons\";\nimport HomepageHero from \"../components/Hero/HomepageHero\";\nimport Challenges from \"../components/Challenges/Challenges\";\nimport CoursesHome from \"../components/Courses/CoursesHome\";\n\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <>\n      {/* Hero unit */}\n      <HomepageHero />\n\n      {/* Lessons */}\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <h1>Lessons Available</h1>\n        <Lessons />\n      </Container>\n\n      {/* Challenges */}\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <h1>Try These Challenges</h1>\n        <Challenges />\n      </Container>\n\n      {/* Courses */}\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <h1>Courses</h1>\n        <CoursesHome />\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport Challenges from \"./Challenges\";\n\nexport default function ChallengesHome() {\n  return (\n    <>\n      <h1>Challenges</h1>\n      <Challenges />\n    </>\n  );\n}\n","import React from \"react\";\nimport Lessons from \"./Lessons\";\n\nexport default function LessonsHome(props) {\n  return (\n    <>\n      <h1>Lessons</h1>\n      <Lessons />\n    </>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Footer\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        Something here to give the footer a purpose!\n      </Typography>\n    </footer>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Axios from \"axios\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport SimpleSnackbar from \"../Feedback/Snackbars/SimpleSnackbar\";\nimport { LessonParseType } from \"../../utils/LessonParse\";\nimport MainCard from \"../Cards/MainCard\";\n\nconst useStyles = makeStyles(theme => ({\n  drupalConsole: {\n    backgroundColor: \"deepskyblue\",\n    textAlign: \"center\"\n  },\n  composer: {\n    backgroundColor: \"lightseagreen\",\n    textAlign: \"center\"\n  },\n  defaultLesson: {\n    backgroundColor: \"purple\",\n    textAlign: \"center\"\n  }\n}));\n\nexport default function Playbook(props) {\n  // Setting up state for the lesson and viewButton\n  const [lesson, setLesson] = useState();\n  const [viewButton, setViewButton] = useState();\n\n  // If view button is true, set the text to \"Finish Reading\" otherwise to \"View\"\n  const viewText = viewButton ? \"Finished Reading\" : \"View\";\n\n  // If there isn't a lesson loaded, return empy component\n  //  otherwise show the additional information\n  const extras =\n    lesson === undefined ? (\n      <></>\n    ) : (\n      <SyntaxHighlighter>{lesson.data.attributes.field_code}</SyntaxHighlighter>\n    );\n\n  // useEffect(() => {}, []);\n\n  // Get the styles with the function we created above\n  const classes = useStyles();\n\n  // Get reference from parent to the function that handles the GridItem size change\n  const sizeEvent = props.sizeEvent;\n\n  const type = LessonParseType(props.type);\n  // const types = [\"drupal_console_lesson_step\", \"drupal_lesson_step\"];\n  let typeText = \"\";\n\n  let style = type => {\n    switch (type) {\n      case \"drupal_console_lesson_step\":\n        typeText = \"Drupal Console\";\n        return classes.drupalConsole;\n      case \"composer_lesson_step\":\n        typeText = \"Composer\";\n        return classes.composer;\n      default:\n        typeText = \"Lesson\";\n        return classes.defaultLesson;\n    }\n  };\n\n  return (\n    <MainCard\n      name={props.name}\n      body={props.body}\n      extras={extras}\n      headerClass={style(type)}\n      title={typeText}\n    >\n      <CardActions>\n        <Button\n          size=\"small\"\n          onClick={() => {\n            if (!viewButton) {\n              Axios.get(\n                props.apiLink +\n                  \"?include=field_screenshot,field_screenshot.field_media_image\"\n              ).then(data => {\n                setLesson(data.data);\n              });\n            } else {\n              setLesson(undefined);\n            }\n            setViewButton(!viewButton);\n            sizeEvent(!viewButton);\n          }}\n        >\n          {viewText}\n        </Button>\n        <SimpleSnackbar size=\"small\" message={<>{props.name} Added</>}>\n          + Add to my lessons\n        </SimpleSnackbar>\n      </CardActions>\n    </MainCard>\n  );\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Playbook from \"./Playbook\";\nimport striptags from \"striptags\";\n\nexport default function PlaybookGridItem(props) {\n  const [size, setSize] = useState();\n\n  const changeSize = size => {\n    setSize(size);\n    console.log(\"changesize\");\n  };\n\n  return (\n    <Grid item key={props.id} xs={12} sm={6} md={size ? 12 : 4}>\n      <Playbook\n        id={props.id}\n        key={props.id}\n        name={props.name}\n        body={striptags(props.body)}\n        apiLink={props.apiLink}\n        sizeEvent={changeSize}\n        type={props.type}\n      />\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport striptags from \"striptags\";\nimport PlaybookGridItem from \"./PlaybookGridItem\";\n\nexport default function Playbooks(props) {\n  const [lessons, setLessons] = useState();\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/composer_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/drupal_console_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/docker_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/drupal_lesson_step\"\n        ),\n        axios.get(\n          \"http://localhost:8000/jsonapi/lesson_step_entity/drupal_module_step\"\n        )\n      ])\n      .then(\n        axios.spread((composerRes, drupalConsoleRes) => {\n          const result = [\n            ...composerRes.data.data,\n            ...drupalConsoleRes.data.data\n          ];\n          setLessons(result);\n        })\n      );\n  }, []);\n\n  return lessons ? (\n    <Grid container spacing={4}>\n      {// Iterating over the lessons to output\n      lessons.map(lesson => {\n        return (\n          <PlaybookGridItem\n            id={lesson.id}\n            key={lesson.id}\n            name={lesson.attributes.name}\n            body={striptags(lesson.attributes.field_instructions.value)}\n            apiLink={lesson.links.self.href}\n            type={lesson.type}\n          />\n        );\n      })}\n    </Grid>\n  ) : (\n    <div>Loading...</div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LocalLibrary from \"@material-ui/icons/LocalLibrary\";\nimport Extension from \"@material-ui/icons/Extension\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport Home from \"@material-ui/icons/Home\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  }\n}));\n\nexport default function ResponsiveDrawer(props) {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        {/* Top navigation links */}\n        <List>\n          {/* Home / Logo Link */}\n          <ListItem button key=\"home\">\n            <ListItemIcon>\n              <Home />\n            </ListItemIcon>\n            <Link to=\"/\" style={{ color: \"inherit\", textDecoration: \"none\" }}>\n              <ListItemText primary=\"jackExchange\" />\n            </Link>\n          </ListItem>\n        </List>\n      </div>\n      <Divider />\n      <List>\n        {/* Lessons Link*/}\n        <ListItem button key=\"lessons\">\n          <ListItemIcon>\n            <LocalLibrary />\n          </ListItemIcon>\n          <Link\n            to=\"/lessons\"\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n          >\n            <ListItemText primary=\"Lessons\" />\n          </Link>\n        </ListItem>\n\n        {/* Challenges Link*/}\n        <ListItem button key=\"challenges\">\n          <ListItemIcon>\n            <Extension />\n          </ListItemIcon>\n          <Link\n            to=\"/challenges\"\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n          >\n            <ListItemText primary=\"Challenges\" />\n          </Link>\n        </ListItem>\n\n        {/* Playbooks Link*/}\n        <ListItem button key=\"playbooks\">\n          <ListItemIcon>\n            <LibraryBooks />\n          </ListItemIcon>\n          <Link\n            to=\"/playbooks\"\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n          >\n            <ListItemText primary=\"Playbooks\" />\n          </Link>\n        </ListItem>\n\n        {/* Courses Link*/}\n        <ListItem button key=\"courses\">\n          <ListItemIcon>\n            <LibraryBooks />\n          </ListItemIcon>\n          <Link\n            to=\"/courses\"\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n          >\n            <ListItemText primary=\"Courses\" />\n          </Link>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button key=\"ask-a-question\">\n          <ListItemIcon>\n            <LibraryBooks />\n          </ListItemIcon>\n          <Link to=\"/ask\" style={{ color: \"inherit\", textDecoration: \"none\" }}>\n            <ListItemText primary=\"Ask a question\" />\n          </Link>\n        </ListItem>\n        <ListItem button key=\"answer-a-question\">\n          <ListItemIcon>\n            <LibraryBooks />\n          </ListItemIcon>\n          <Link\n            to=\"/playbooks\"\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n          >\n            <ListItemText primary=\"Help Others\" />\n          </Link>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {/* TODO: Insert Page title? Add Search?  */}\n            Home\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      {/* Main Content */}\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object\n};\n","import React from \"react\";\n\n// Material UI\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\n// API fetching\nimport { ApolloClient } from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\n// Routing\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\n// Custom-ish components\nimport Home from \"./pages/Home\";\nimport ChallengesHome from \"./components/Challenges/ChallengesHome\";\nimport CoursesHome from \"./components/Courses/CoursesHome\";\nimport LessonsHome from \"./components/Lessons/LessonsHome\";\nimport Footer from \"./components/Navigation/Footer\";\nimport Playbooks from \"./components/Playbooks/Playbooks\";\nimport ResponsiveDrawer from \"./components/Navigation/Drawers/ResponsiveDrawer\";\n\n// Setup caching for Apollo\nconst cache = new InMemoryCache();\n\n// Setup the path for graphql\nconst link = new HttpLink({\n  uri: \"http://localhost:8000/graphql\"\n});\n\n// Initialize the Apollo Constructor\nconst client = new ApolloClient({\n  cache,\n  link\n});\n\n// Create a theme for Material UI\nconst theme = createMuiTheme({\n  palette: {\n    // type: 'light',\n    type: \"dark\"\n  }\n});\n\nexport default function App() {\n  return (\n    // Telling app we'll be using Apollo for child componenets\n    <ApolloProvider client={client}>\n      {/* Setup for Routing*/}\n      <BrowserRouter>\n        {/* Setup the theme */}\n        <ThemeProvider theme={theme}>\n          <React.Fragment>\n            {/* \"Kickstart an elegant, consistent, and simple baseline to build upon\" */}\n            <CssBaseline />\n            {/* Responsive drawer compnenet that also contains the content for the page*/}\n            <ResponsiveDrawer>\n              {/* Home Route */}\n              <Route path=\"/\" exact render={() => <Home />} />\n              {/* Challenges Route */}\n              <Route\n                path=\"/challenges\"\n                exact\n                render={() => <ChallengesHome />}\n              />\n              {/* Lessons Route */}\n              <Route path=\"/lessons\" exact render={() => <LessonsHome />} />\n              {/* Playbooks Route */}\n              <Route path=\"/playbooks\" exact render={() => <Playbooks />} />\n              {/* Courses Route */}\n              <Route path=\"/courses\" exact render={() => <CoursesHome />} />\n            </ResponsiveDrawer>\n            {/* Footer */}\n            <Footer />\n          </React.Fragment>\n        </ThemeProvider>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}